<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<context:property-placeholder
		location="classpath:datasource/datasource.properties" />
	<tx:annotation-driven transaction-manager="hibernateTransactionManager" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<interceptors>
		<beans:bean id="webContentInterceptor"
			class="org.springframework.web.servlet.mvc.WebContentInterceptor">
			<beans:property name="cacheSeconds" value="0"></beans:property>
			<beans:property name="useExpiresHeader" value="true"></beans:property>
			<beans:property name="useCacheControlHeader" value="true"></beans:property>
			<beans:property name="useCacheControlNoStore" value="true"></beans:property>
		</beans:bean>
	</interceptors>

	<context:component-scan base-package="com.security.spring" />

	<beans:bean id="encoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg value="12"></beans:constructor-arg>
	</beans:bean>

	<!--Database Configuration -->
	<beans:bean
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		id="dataSource">
		<beans:property name="driverClassName" value="${database.driver}">
		</beans:property>
		<beans:property name="url" value="${database.url}">
		</beans:property>
		<beans:property name="username" value="${database.user}">
		</beans:property>
		<beans:property name="password" value="${database.password}">
		</beans:property>
	</beans:bean>

	<!--Entity Configuration -->
	<beans:bean
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" id="sessionFactory">
		<beans:property name="dataSource" ref="dataSource">
		</beans:property>
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.security.spring.domain.User</beans:value>
				<beans:value>com.security.spring.domain.Role</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">${hibernate.dialect}</beans:prop>
				<beans:prop key="hibernate.show_sql">${hibernate.show_sql}</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>


	<!--Transaction Manager -->
	<beans:bean
		class="org.springframework.orm.hibernate4.HibernateTransactionManager"
		id="hibernateTransactionManager">
		<beans:property name="sessionFactory" ref="sessionFactory">
		</beans:property>
	</beans:bean>

</beans:beans>
